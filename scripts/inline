#!/usr/bin/env node

/**
 * A lightweight script to inline and (optionally) minify CSS and JS.
 * Hand-rolled to avoid Grunt/Gulp/Flavour-of-the-month with their various wrappers of other
 * modules, sometimes with outdated versions that I don't want.
 */

var fs = require('fs-extra'),
    path = require('path'),
    helpers = require('./helpers'),
    inlineSource = require('inline-source'),
    minify = require('html-minifier').minify;

var inputFile = 'main.html';
var outputFile = 'index.html';
var contents = '';

// Rewrite CSS links to point to autoprefixed files, if found
function usePrefixedFile(source) {
    if (source.type === 'css') {
        var newpath = helpers.processedPath(source.filepath);
        try {
            var stats = fs.statSync(newpath);
            if (stats && stats.isFile()) {
                source.filepath = newpath;
                source.fileContent = fs.readFileSync(newpath, 'utf-8');
            }
        } catch (e) {}
    }
}

// Perform the inlining of scripts and styles
var file = helpers.path(inputFile);
var inlineOpts = {
    compress: false,
    attribute: false,
    handlers: [usePrefixedFile],
};
contents = inlineSource.sync(file, inlineOpts);

// Minify (optional with -m argument)
if (process.argv[2] === '-m') {
    contents = minify(contents, {
        removeComments: true,
        collapseWhitespace: true,
        minifyJS: true,
        minifyCSS: true,
        maxLineLength: 1000
    });
}

// Write to file
fs.writeFileSync(path.join(helpers.deployDir, outputFile), contents);

console.log('generated ' + path.join(path.basename(helpers.deployDir), outputFile));
